// Generated by CoffeeScript 1.6.3
var app, db, express, http, metrics, stylus;

http = require('http');

stylus = require('stylus');

express = require('express');

db = require('./db');

metrics = require('./metrics');

app = express();

app.set('views', "" + __dirname + "/../views");

app.set('view engine', 'jade');

app.use(express.bodyParser());

app.use(express.methodOverride());

app.use(express.cookieParser('your secret here'));

app.use(express.session());

app.use(app.router);

app.use(stylus.middleware("" + __dirname + "/../public"));

app.use(express["static"]("" + __dirname + "/../public"));

app.use(express.errorHandler({
  showStack: true,
  dumpeExceptions: true
}));

app.get('/metric/:id.json', function(req, res) {
  console.log('Get a metric :');
  console.log(req.params.id);
  return metrics.get(req.params.id, function(err, values) {
    if (err) {
      return next(err);
    }
    return res.json({
      id: req.params.id,
      values: values
    });
  });
});

app.post('/metric/:id.json', function(req, res) {
  console.log('Save a metric :');
  console.log(req.params.id);
  return metrics.save(req.params.id, req.body, function(err) {
    if (err) {
      return next(err);
    }
    return metrics.get(req.params.id, function(err, values) {
      if (err) {
        return next(err);
      }
      return res.json({
        id: req.params.id,
        values: values,
        status: 'ok'
      });
    });
  });
});

app["delete"]('/metric/:id.json', function(req, res) {
  console.log('Delete a metric :');
  console.log(req.params.id);
  return metrics.remove(req.params.id, function(err) {
    if (err) {
      return next(err);
    }
    return res.json({
      status: 'ok'
    }, http.createServer(app).listen(1234, function() {
      return console.log('http://localhost:1234');
    }));
  });
});

app.listen(1234);
